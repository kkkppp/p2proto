package org.p2proto.dto;

import lombok.Data;
import org.p2proto.model.record.FieldType;
import org.p2proto.model.record.FormField;

import java.util.Map;
import java.util.UUID;

@Data
public class ColumnMetaData {
    private UUID id;
    private final String name;        // Column name
    private final String label;       // Column label
    private final org.p2proto.ddl.Domain domain;  // Data type
    private final Boolean primaryKey;
    private final Boolean autoGenerated;
    private final Map<String, String> additionalProperties; // Additional properties
    private final TableMetadata.SelectDecorator selectDecorator; // Decorator for generating SELECT parts
    private final TableMetadata.WhereDecorator whereDecorator;   // Decorator for generating WHERE parts

    public ColumnMetaData(String name, String label, org.p2proto.ddl.Domain dataType, Map<String, String> additionalProperties) {
        this(null, name, label, dataType, false, false, additionalProperties, TableMetadata.SelectDecorator.defaultDecorator(), TableMetadata.WhereDecorator.defaultDecorator());
    }

    public ColumnMetaData(UUID id, String name, String label, org.p2proto.ddl.Domain dataType, Boolean primaryKey, Boolean autoGenerated, Map<String, String> additionalProperties) {
        this(id, name, label, dataType, primaryKey, autoGenerated, additionalProperties, TableMetadata.SelectDecorator.defaultDecorator(), TableMetadata.WhereDecorator.defaultDecorator());
    }

    public ColumnMetaData(UUID id, String name, String label, org.p2proto.ddl.Domain dataType, Boolean primaryKey, Boolean autoGenerated, Map<String, String> additionalProperties, TableMetadata.SelectDecorator selectDecorator, TableMetadata.WhereDecorator whereDecorator) {
        this.id = id;
        this.name = name;
        this.label = label;
        this.domain = dataType;
        this.primaryKey = primaryKey;
        this.autoGenerated = autoGenerated;
        this.additionalProperties = additionalProperties;
        this.selectDecorator = selectDecorator;
        this.whereDecorator = whereDecorator;
    }

    /**
     * Utility method to generate FormField representation.
     */
    public FormField toFormField() {
        FormField formField = new FormField();
        formField.setName(name);
        formField.setLabel(label);
        formField.setType(mapDataTypeToFieldType(domain));
        formField.setAutoGenerated(autoGenerated);
        formField.setRequired(false); // Default value, can be customized based on additional properties
        return formField;
    }

    private FieldType mapDataTypeToFieldType(org.p2proto.ddl.Domain domain) {
        return switch (domain) {
            case TEXT -> FieldType.TEXT;
            case DATE -> FieldType.DATE;
            case DATETIME -> FieldType.DATETIME;
            case UUID, INTEGER, AUTOINCREMENT -> FieldType.NUMBER;
            case BOOLEAN -> FieldType.CHECKBOX;
            case PASSWORD -> FieldType.PASSWORD;
            default -> throw new IllegalArgumentException("Unsupported data type: " + domain);
        };
    }

    /**
     * Generates the part of the SELECT clause for this column.
     */
    public String generateSelectPart() {
        return selectDecorator.decorate(name, domain);
    }

    /**
     * Generates the part of the WHERE clause for this column using a placeholder.
     *
     * @return The WHERE clause part with a placeholder.
     */
    public String generateWherePart() {
        return whereDecorator.decorate(name, domain);
    }
}
